layers:

lr:

activations:
  ReLU: 0
  Sigmoid: 0
  PReLU: 0

hardw_settings:
  devices: 1
  accelerator: "gpu"
  strategy: "ddp"
  num_of_nodes: 1


train_config:
  lr: 0.0001
  n_epochs: 222
#  num_batches: 10e10

loader_config:
  batch_size: 512
  num_workers: 1

experiment_config:
  val_frac: 0.11
  test_frac: 0.09

data_config:
  scheme: "Verwer"
  species: 
  species_oh: ["OH", "HO2", "H2O2"] # list of chemical species
  species_verwer: ["CO","HNO3","SO4","XO2","O1D","SO2","O3P","ALD2","PAN","CH3O","N2O5","NO3","HCHO","O3","C2O3","HO2","NO2","NO","CH3O2","OH"]
  trajectory_length: 200 # number of time steps into the future we emulate (predict) during training
  ntimesteps_in_training_set: 10000 #00 #59999
  data_path: "/gpfs/work/vlasenko/NACHMO_data/verwer_long2/"
  data_type: torch.float64

net_config:
  n_hidden: [480,480,480,480]
  input_products: True # flag defining whether we provide all concentration products as input
  activation: "ReLU"
  device: "cuda"
  debug: False
  NN_dtype: torch.float32

stepper_config:
  learn_updates: false
  learn_rates: false
  stoichiometry_matrix: false
  try_Ssur_matrix: true
  rectify_outputs: true

loss_config:
  first_loss_step: 1 # first future time step contributing to the loss (min 1, max trajectory_length)
  penalty_factor: 0.0 # user defined weight for negativity penalty

visualization_config:
  nsteps: 1055 # number of time steps to vizualize
  ncells: 10 # number of grid cells to visualize
  alp: 0.075 # scatter plot's brightness parameter
  test_output_frequency: 1
  concentrations_or_tendencies: "concentrations"

exp_name: "All_dtype64"
log_name: "Verwer"
extra_option: 3
path_to_estimates:


description: 'IExperiment with data computed for dtype = torch.float64, NN has dtype=float32 '
# swithc specifies whether we visualize concentrations or its time derivative dc/dt :  c(t+1,:) -c(t)
